export declare enum ToggleState {
    Off = 0,
    On = 1
}
/**
 * Toggle component for entities with two states (ON or OFF)
 */
export declare class ToggleComponent {
    enabled: boolean;
    private onValueChangedCallback?;
    private state;
    /**
     * Create an instance of a ToggleComponent
     * @param {ToggleState} startingState starting state of the toggle (ON or OFF)
     * @param {(value: ToggleState) => void} onValueChangedCallback called when toggle state changed
     */
    constructor(startingState?: ToggleState, onValueChangedCallback?: (value: ToggleState) => void);
    /**
     * Set trigger to a state
     * @param {ToggleState} state new state
     */
    set(state: ToggleState): void;
    /**
     * Toggle state of ToggleComponent
     */
    toggle(): void;
    /**
     * Get if the current toggle state is ON
     * @return {boolean}
     */
    isOn(): boolean;
    /**
     * Set callback for when ToggleComponent state changed
     * @param {(value: ToggleState) => void} onValueChangedCallback callback
     */
    setCallback(onValueChangedCallback: (value: ToggleState) => void): void;
}
declare const _default: {
    ToggleComponent: typeof ToggleComponent;
    ToggleState: typeof ToggleState;
};
export default _default;
