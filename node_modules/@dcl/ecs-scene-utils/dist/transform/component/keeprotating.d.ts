/// <reference types="dcl" />
import { ITransformComponent } from './itransformcomponent';
/**
 * Component to rotate entity indefinitely until stop is called
 */
export declare class KeepRotatingComponent implements ITransformComponent {
    onFinishCallback?: () => void;
    private rotationVelocity;
    private rotation;
    private finished;
    /**
     * Rotates an entity continuously. The entity will keep rotating forever until it's explicitly stopped or the component is removed.
     * @param {Quaternion} rotationVelocity a quaternion describing the desired rotation to perform each second second
     * @param {() => void} onFinishCallback called when rotation ends
     */
    constructor(rotationVelocity: Quaternion, onFinishCallback?: () => void);
    update(dt: number): void;
    hasFinished(): boolean;
    assignValueToTransform(transform: Transform): void;
    stop(): void;
}
